import { UserConfig, ConfigEnv, UserConfigExport } from 'vite';
import { createHtmlPlugin } from 'vite-plugin-html';
import legacy from '@vitejs/plugin-legacy';
import { Options } from '@vitejs/plugin-react';
import reactSWC from '@vitejs/plugin-react-swc';
import { PluginOptions } from 'vite-tsconfig-paths';
import restart from 'vite-plugin-restart';
import { PluginOptions as PluginOptions$1 } from 'vite-plugin-qrcode';

interface OverrideHtml {
    html?: false | Parameters<typeof createHtmlPlugin>[0];
}

interface OverrideLegacy {
    /**
     * 兼容不支持 type=module 的浏览器
     * @see https://caniuse.com/es6-module
     */
    legacy?: true | Parameters<typeof legacy>[0];
}

interface OverrideMix {
    /**
     * Base public path when served in development or production.
     * @default './'
     */
    base?: string;
    /**
     * @default false
     */
    clearScreen?: boolean;
}

interface OverrideReact {
    /**
     * 默认使用插件 [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) 提升编译速度。
     *
     * 如果要使用兼容性更强的 [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react)，则设置 `swc=false`
     */
    react?: (Options & {
        swc: false;
    }) | (Parameters<typeof reactSWC>[0] & {
        swc?: true;
    });
}

interface OverrideResolve {
    resolve?: UserConfig['resolve'] & {
        /**
         * 从`tsconfig.json`中获取路径别名。默认值：`true`
         *
         * 插件：[vite-tsconfig-paths](https://github.com/aleclarson/vite-tsconfig-paths)
         */
        aliasFromTsconfig?: boolean | PluginOptions;
    };
}

interface OverrideServer {
    server?: UserConfig['server'] & {
        /**
         * vite目前自动重启的条件有：
         * - 修改了 `vite.config.[tj]s` 文件
         * - 修改了 `.env[.*]` 文件
         *
         * 这里可以添加额外的监听文件。设置`restart`可重启服务，设置`reload`可刷新页面。
         *
         * 插件：[vite-plugin-restart](https://github.com/antfu/vite-plugin-restart)
         */
        watchExtend?: Parameters<typeof restart>[0];
        /**
         * 开发启动时传递`--host`或者配置了`server.host`时，将展示二维码。
         *
         * 默认值：`true`
         *
         * 插件：[vite-plugin-qrcode](https://github.com/svitejs/vite-plugin-qrcode)
         */
        qrcode?: boolean | PluginOptions$1;
    };
}

type OverrideKeys = 'legacy' | 'server' | 'resolve';
interface Config extends OverrideMix, OverrideReact, OverrideLegacy, OverrideHtml, OverrideServer, OverrideResolve, Omit<UserConfig, OverrideKeys> {
}
type ConfigFn = (env: ConfigEnv) => Config;
type ConfigExport = Config | ConfigFn;
declare const defineConfig: (config?: ConfigExport) => UserConfigExport;

export { Config, ConfigExport, ConfigFn, defineConfig };
import 'vite/client';
