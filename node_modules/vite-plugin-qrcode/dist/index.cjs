"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  qrcode: () => qrcode
});
module.exports = __toCommonJS(src_exports);
var import_qrcode_terminal = __toESM(require("qrcode-terminal"), 1);
function qrcode(options = {}) {
  return {
    name: "vite-plugin-qrcode",
    apply: "serve",
    configureServer(server) {
      const _listen = server.listen;
      server.listen = function() {
        var _a;
        const isRestart = arguments[1] === true;
        if (!isRestart) {
          (_a = server.httpServer) == null ? void 0 : _a.on("listening", () => {
            setTimeout(() => logQrcode(server, options), 0);
          });
        }
        return _listen.apply(this, arguments);
      };
    }
  };
}
function logQrcode(server, options) {
  var _a;
  let networkUrls = (_a = server.resolvedUrls) == null ? void 0 : _a.network;
  if (!networkUrls)
    return;
  if (options.filter) {
    networkUrls = networkUrls.filter(options.filter);
  }
  if (networkUrls.length === 0)
    return;
  const info = server.config.logger.info;
  info("\n  Visit page on mobile:");
  for (const url of networkUrls) {
    import_qrcode_terminal.default.generate(url, { small: true }, (result) => {
      info(`  ${cyan(url)}
  ${result.replace(/\n/g, "\n  ")}`);
    });
  }
}
function cyan(str) {
  return `\x1B[36m${str}\x1B[0m`;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  qrcode
});
